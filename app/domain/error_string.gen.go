// Code generated by "stringer -type=ErrorType -linecomment -output error_string.gen.go"; DO NOT EDIT.

package domain

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ErrorTypeValidationFailed-1]
	_ = x[ErrorTypeRegistAdminValidationFailed-2]
	_ = x[ErrorTypeAdminEmailValidationFailed-3]
	_ = x[ErrorTypeLoginValidationFailed-4]
	_ = x[ErrorTypeRegistItemAlreadyRegistered-5]
	_ = x[ErrorTypePasswordOrEmailValidationFailed-6]
	_ = x[ErrorTypeRegistMemberValidationFailed-7]
	_ = x[ErrorTypeUUIDValidationFailed-8]
	_ = x[ErrorTypeRequestParamsNotSet-9]
	_ = x[ErrorTypeMemberAlreadyDeleted-10]
	_ = x[ErrorTypeAuthenticationFailed-11]
	_ = x[ErrorTypeNotFound-12]
	_ = x[ErrorTypeContentNotFound-13]
	_ = x[ErrorTypeInternalError-14]
}

const _ErrorType_name = "validation_failedregist admin validation_failedErrorTypeAdminEmailValidationFailedErrorTypeLoginValidationFailedregist item validation_failedErrorTypePasswordOrEmailValidationFailedErrorTypeRegistMemberValidationFailedinvalid_uuidparams_not_foundrequested_member_already_deletedauthentication_faildnot_foundcontent_not_foundinternal_error"

var _ErrorType_index = [...]uint16{0, 17, 47, 82, 112, 141, 181, 218, 230, 246, 278, 298, 307, 324, 338}

func (i ErrorType) String() string {
	i -= 1
	if i < 0 || i >= ErrorType(len(_ErrorType_index)-1) {
		return "ErrorType(" + strconv.FormatInt(int64(i+1), 10) + ")"
	}
	return _ErrorType_name[_ErrorType_index[i]:_ErrorType_index[i+1]]
}
